worker_processes 4;
pid /run/nginx.pid;

# error_log /var/logs/error.log error;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include mime.types;
  index index.html
  default_type  text/plain;

  # client size
  client_max_body_size 10M;

  # gzip conf
  gzip             on;
  gzip_comp_level  2;
  gzip_min_length  20;
  gzip_proxied     expired no-cache no-store private auth;
  gzip_types       text/plain text/css text/csv application/javascript application/json;

  # don't send the nginx version number in error pages and Server header
  server_tokens off;

  # config to don't allow the browser to render the page inside an frame or iframe
  # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
  add_header X-Frame-Options SAMEORIGIN;

  # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
  # to disable content-type sniffing on some browsers.
  add_header X-Content-Type-Options nosniff;

  # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
  # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
  # this particular website if it was disabled by the user.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header X-XSS-Protection "1; mode=block";

  # with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
  # you can tell the browser that it can only download content from the domains you explicitly allow
  # add_header Content-Security-Policy "default-src 'self'; script-src 'self';


  server {
      listen #PORT#;
      listen [::]:#PORT#;

      resolver 8.8.8.8;
      root /var/www;
      include /etc/nginx/includes/proxy.conf;

      location / {
        index index.html;
        # try_files $uri /index.html;
      }
    }
}
